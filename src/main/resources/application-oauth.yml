spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 642225847404-je5i44c2t5d6jskll3sk82nqh233ejlk.apps.googleusercontent.com
            client-secret: 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
            scope:
            - profile
            - email
            redirect-uri: http://localhost:8080/login/oauth2/code/google

pp:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000, "https://localhost:3000", "https://localhost:8080","http://localhost:8080"  # Comma separated list of allowed origins
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - https://localhost:3000/oauth2/redirect/
      - http://localhost:3000/oauth2/redirect/
      - https://localhost:3000/oauth2/login/
      - http://localhost:3000/oauth2/login/
